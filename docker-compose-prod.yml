services:
  nginx:
    container_name: od_nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${PROJECT_PATH}:/var/www/${PROJECT_NAME}
      - ${PROJECT_PATH}/storage:/var/www/${PROJECT_NAME}/storage
      - ${PROJECT_PATH}/docker/nginx/conf.d/default.prod.conf:/etc/nginx/conf.d/default.conf
      - ${PROJECT_PATH}/docker/nginx/wait-for-front.sh:/wait-for-front.sh
    depends_on:
      - app
      - db
      - front
    command: [ "/bin/sh", "-c", "/wait-for-front.sh" ]
    networks:
      - od-app

  front:
    build:
      context: ../ooddiiy-front
      target: prod
    container_name: od_front
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://85.190.254.42
      - NEXT_PUBLIC_API_URL_SSR=http://nginx
      - NEXT_PUBLIC_API_VERSION_PREFIX=api/v1
    ports:
      - "3000:3000"
    networks:
      - od-app

  app:
    container_name: od_app
    user: 1000:1000
    build:
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ${PROJECT_PATH}:/var/www/${PROJECT_NAME}
      - ${PROJECT_PATH}/storage:/var/www/${PROJECT_NAME}/storage
    expose:
      - "9000"
    depends_on:
      - db
    networks:
      - od-app

  db:
    container_name: od_db
    image: mysql:8
    restart: always
    volumes:
      - od-db:/var/lib/mysql
    ports:
      - target: 3306
        published: 3309
    environment:
      MYSQL_DATABASE: oddiiydb
      MYSQL_USER: gumbum
      MYSQL_PASSWORD: gumpass
      MYSQL_ROOT_PASSWORD: oddiiyroot
    networks:
      - od-app

volumes:
  od-db:

networks:
  od-app:
    driver: bridge
